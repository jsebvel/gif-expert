{"version":3,"sources":["reportWebVitals.js","Components/AddCategory.js","helpers/getGifs.js","Components/GifGreedItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","lastCategories","type","value","onChange","target","handleInputChange","getGifs","category","a","console","log","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGreedItem","className","src","alt","GifGrid","loading","state","setState","useEffect","setTimeout","useFetchGifs","GifExpertApp","categories","categorie","ReactDOM","render","document","getElementById"],"mappings":"8KAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,qBCJDQ,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAa9C,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAc,OAAMP,GAAN,mBAAqBO,OACjDN,EAAc,MAIlB,SACI,uBAAOO,KAAK,OACRC,MAAOT,EACPU,SAAU,SAACP,IAfG,SAACA,GACvBF,EAAcE,EAAEQ,OAAOF,OAeXG,CAAkBT,S,+BCpBzBU,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACnBC,QAAQC,IAAIH,GACNI,EAFa,iDAEmCC,UAAUL,GAF7C,8DAGAM,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaXM,GAbW,4CAAH,sDCDPO,EAAe,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACrC,OACI,sBAAKc,UAAU,QAAf,UACG,4BAAIJ,IACJ,qBAAKK,IAAKf,EAAKgB,IAAKN,QCClBO,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EACdf,mBAAS,CAC/BwB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAqBxC,OAfAC,qBAAU,WACN1B,EAAQC,GACHvB,MAAK,SAAAgC,GACFiB,YAAW,WACPxB,QAAQC,IAAIM,GACZe,EAAS,CACLf,KAAMA,EACNa,SAAS,MAGd,UAEZ,IAGIC,EDb0BI,CAAa3B,GAAjCe,EANwB,EAM9BN,KAN8B,EAMhBa,QAErB,OACI,qCACI,6BAAKtB,IACL,qBAAKkB,UAAU,8CAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEStBe,EAzBM,WAAO,IAAD,EACa3C,mBAAS,CAAC,cADvB,mBAChB4C,EADgB,KACJ7C,EADI,KAQvB,OAAO,qCACH,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ6C,EAAWlB,KAAI,SAAAmB,GAAS,OACrB,cAAC,EAAD,CAEC9B,SAAW8B,GADNA,YCdzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1B5D,M","file":"static/js/main.b4f2c4e8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useState } from \"react\";\nimport Proptypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2){\n            setCategories(lastCategories => [ inputValue, ...lastCategories]);\n            setInputValue('');\n        }\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\"\n                value={inputValue}\n                onChange={(e) => {\n                    handleInputChange(e);\n                }}\n            ></input>\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: Proptypes.func.isRequired\n}","\nexport const getGifs = async (category) => {\n    console.log(category);\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=5&api_key=MwHYisUiyRykRdMfAO3Gel21vDRZJApR`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n        }\n\n    });\n    return (gifs);\n\n}","export const GifGreedItem = ({id, title, url}) => {\n    return (\n        <div className=\"card \">\n           <p>{title}</p>\n           <img src={url} alt={title} />\n        </div>\n    )\n}\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGreedItem } from \"./GifGreedItem\";\n\nexport const GifGrid = ({ category }) => {\n\n    // const [images, setImages] = useState([])\n    // useEffect(() => {\n    //     getGifs(category).then(imgs => setImages(imgs));\n    // }, [category])\n    const {data: images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3>{category}</h3>\n            <div className=\"card-grid animate__animated animate__bounce\">\n                {\n                    images.map(img =>\n                        <GifGreedItem\n                            key={img.id}\n                            {...img} />\n                    )\n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category)\n            .then(data => {\n                setTimeout(() => {\n                    console.log(data);\n                    setState({\n                        data: data,\n                        loading: false\n                    });\n\n                }, 3000);\n            });\n    }, [])\n\n\n    return state;\n}","import { useState } from \"react\";\nimport { AddCategory } from \"./Components/AddCategory\";\nimport { GifGrid } from \"./Components/GifGrid\";\n\nconst GifExpertApp = () => {\n    const [categories, setCategories] = useState(['One punch']);\n    // const categories = ['One punch', 'Samuari X', 'Dragon Ball'];\n    // const handleApp = () => {\n    //     setCategories([...categories, 'Yuyu Hakusho']);\n    //     console.log(categories);\n    // }\n\n    return <>\n        <h2>Gif ExpertApp</h2>\n        <AddCategory setCategories={setCategories} />\n        <hr />\n        <ol>\n            {\n                categories.map(categorie => (\n                   <GifGrid\n                    key={categorie}\n                    category= {categorie}\n                    />\n                ))\n            }\n        </ol>\n    </>\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}